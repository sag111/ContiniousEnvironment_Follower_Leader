{
  cleint_gym {
    host = "localhost"
    port = 6354
    endpoint = "/follow"
    follow = "http://localhost:6354/follow"
  }

  # Распознавание объектов
  object_det {
    host = "localhost"
    port = 3333
    endpoint = "/detection"
    send_data = "http://192.168.1.35:3333/detection"
  }

  # RL агент следования
  rl_agent {
    env_config = {
      "name": "ArcticRobot-v1",
      "discrete_action": False,
      "time_for_action": 0.4,
      "trajectory_saving_period": 3,
      "min_distance": 6.0,
      "max_distance": 25.0,
      "object_detection_endpoint": "http://localhost:3333/detection",
    }

    debug_config = ${rl_agent.env_config} {
      "name": "ArcticRobotDebug-v1"
    }

    get_weights = "http://localhost:9900"

    mode = "remote"

    points = [
      # xyz arctic, xyz target, xy endpoint
      [-30, -48, 0.5, -20, -48, 1.0, 50.0, -40.0],
      [6, -18, 0.5, 15, -18, 1.0, 30.0, -50.0],
      [0, 0, 0.5, 12, 0, 1.0, 70.0, -35.0],
      [-10, -28, 0.5, 0, -28, 1.0, 35.0, -50.0],
      [-5, 30, 0.5, 5, 30, 1.0, 50.0, -60.0],
      [-50, 35, 0.5, -40, 35, 1.0, 65.0, -55.0],
      [-45, 5, 0.5, -35, 5, 0.5, 75.0, -45.0],
      [0, -65, 0.5, 10, -65, 0.5, 65.0, -70.0],
      [10, -75, 0.5, 20, -75, 0.5, 70.0, -10.0],
      [10, 35, 0.5, 20, 35, 0.5, 65.0, 5.0],
    ]
  }

  topic {
    # ros publishers
    # Робот
    robot_camera_pitch = /default_robot/camera_pitch_controller/command # Управление углом наклона вращающейся камеры
    robot_camera_yaw = /default_robot/camera_yaw_controller/command # Управление углом рыскания вращающейся камеры
    robot_cmd_vel = /default_robot/mobile_base_controller/cmd_vel # Управление скоростью робота
    robot_goal = /default_robot/move_base_simple/goal # Движение робота в заданную точку
    robot_path = /external/follower_path/path # Внешний путь робота
    # Цель
    target_goal = /target_robot/move_base_simple/goal # Управление целью
    target_cancel = /target_robot/move_base/cancel # Отмена действий цели
    target_path = /external/target_path/path # Внешний путь цели
    # Общее
    teleport = /gazebo/set_model_state # Перемещение модели

    # ros subscribers
    # Робот
    robot_odom = /default_robot/gazebo_ground_truth_odom # Абсолютная позиция робота
    robot_lidar = /default_robot/velodyne_points2 # Лидар робота
    robot_rotating_camera = /default_robot/rotating_camera/image_raw/compressed # Изображение с вращающейся камеры робота
    robot_camera_yaw_state = /default_robot/camera_yaw_controller/state # Состояние угла раскания вращающейся камеры
    robot_status_move_to = /default_robot/move_base/status # Статус выполнения действий роботом move_to
    # Цель
    target_odom = /target_robot/target_ground_truth_odom # Абсолютная позиция цели
    target_status = /target_robot/move_base/status # Статус выполнения действий целью
  }

}